<?php

/*
 * Spot Bundle
 * This file is part of the BardisCMS.
 *
 * (c) George Bardis <george@bardis.info>
 *
 */

namespace BardisCMS\SpotBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use BardisCMS\SpotBundle\Entity\Spot;
use Application\Sonata\MediaBundle\Entity\Media;


/**
 * BardisCMS\SpotBundle\Entity\SpotTag
 *
 * @ORM\Table(name="spot_filters")
 * @ORM\Entity
 */
class SpotFilter
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\Column(type="string", length=255)
     */ 
    protected $title;

    /**
     * @ORM\Column(type="string", length=255)
     */ 
    protected $filterCategory;

    /**
     * @ORM\OneToOne(targetEntity="Application\Sonata\MediaBundle\Entity\Media", cascade={"persist"})
     * @ORM\JoinColumn(name="filterIcon")
     */ 
    protected $filterIcon;

   /**
    * @ORM\ManyToMany(targetEntity="BardisCMS\SpotBundle\Entity\Spot", mappedBy="spotFilters", cascade={"all"})
    */
    protected $spots;
	

    public function __construct()
    {
        $this->spots = new \Doctrine\Common\Collections\ArrayCollection();
    }


    /**
     * toString Title
     *
     * @return string 
     */
    public function __toString()
    {
		if($this->getTitle()){
			return (string)$this->getTitle();			
		}
		else{
			return (string)'New Spot Filter';
		}
    }
    
    /**
    * toString filterCategory
    *
    * @return string 
    */
    public function getFilterCategoryAsString()
    {
        switch($this->getFilterCategory()){
            case('amenities'):		return "Amenities/Facilities";
            case('budget'):			return "Budget";
            case('experience'):		return "Experience";
            case('lifestyle'):		return "Lifestyle";
            case('season'):			return "Season";
            case('sea_state'):		return "Sea State";
            case('sport'):			return "Sport";
            case('style'):			return "Style";
            case('swell_length'):	return "Swell Length";
            case('wind_force'):		return "Wind Force";
            default:				return $this->getFilterCategory();
        }
    }
}
