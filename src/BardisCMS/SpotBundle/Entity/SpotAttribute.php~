<?php

/*
 * Spot Bundle
 * This file is part of the BardisCMS.
 *
 * (c) George Bardis <george@bardis.info>
 *
 */

namespace BardisCMS\SpotBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use BardisCMS\SpotBundle\Entity\Spot;
use Application\Sonata\MediaBundle\Entity\Media;


/**
 * BardisCMS\SpotBundle\Entity\SpotAttribute
 *
 * @ORM\Table(name="spot_attributes")
 * @ORM\Entity
 */
class SpotAttribute
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $nearestAirport = null;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $nearestTown = null;

    /**
     * @ORM\Column(type="boolean")
     */   
    protected $publicTransportation = 0;

    /**
     * @ORM\Column(type="boolean")
     */   
    protected $accessProblem = 0;

    /**
     * @ORM\Column(type="boolean")
     */   
    protected $surfClub = 0;

    /**
     * @ORM\Column(type="boolean")
     */   
    protected $lessons = 0;

    /**
     * @ORM\Column(type="boolean")
     */   
    protected $rental = 0;

    /**
     * @ORM\Column(type="boolean")
     */   
    protected $storage = 0;

    /**
     * @ORM\Column(type="boolean")
     */   
    protected $repair = 0;

    /**
     * @ORM\Column(type="boolean")
     */   
    protected $gearshop = 0;

    /**
     * @ORM\Column(type="boolean")
     */   
    protected $rescue = 0;

    /**
     * @ORM\Column(type="boolean")
     */   
    protected $snacksAndDrinks = 0;

    /**
     * @ORM\Column(type="boolean")
     */   
    protected $parking = 0;

    /**
     * @ORM\Column(type="boolean")
     */   
    protected $toilets = 0;

    /**
     * @ORM\Column(type="boolean")
     */   
    protected $showers = 0;

    /**
     * @ORM\Column(type="array")
     */  
    protected $accommodation;

    /**
     * @ORM\Column(type="array")
     */  
    protected $budjet;

    /**
     * @ORM\Column(type="array")
     */  
    protected $spotType;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $shoreType = null;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $bottom = null;

    /**
     * @ORM\Column(type="array")
     */  
    protected $sports;

    /**
     * @ORM\Column(type="array")
     */  
    protected $experience;

    /**
     * @ORM\Column(type="array")
     */  
    protected $style;

    /**
     * @ORM\Column(type="array")
     */  
    protected $crowded;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $dangers = null;

    /**
     * @ORM\Column(type="array")
     */  
    protected $windDirection;

    /**
     * @ORM\Column(type="array")
     */  
    protected $bestWindDirection;

    /**
     * @ORM\Column(type="array")
     */  
    protected $windForce;

    /**
     * @ORM\Column(type="array")
     */  
    protected $relative;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $blowingTime = null;

    /**
     * @ORM\Column(type="array")
     */  
    protected $seaState;

    /**
     * @ORM\Column(type="array")
     */  
    protected $swellType;

    /**
     * @ORM\Column(type="array")
     */  
    protected $swellDirection;

    /**
     * @ORM\Column(type="array")
     */  
    protected $swellLength;

    /**
     * @ORM\Column(type="array")
     */  
    protected $pointBreak;

    /**
     * @ORM\Column(type="array")
     */  
    protected $tide;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $waterQuality = null;

    /**
     * @ORM\Column(type="array")
     */
    protected $season;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $seaTemperature = null;

    /**
     * @ORM\Column(type="boolean")
     */   
    protected $nightlife = 0;


    /**
     * @ORM\Column(type="boolean")
     */   
    protected $family = 0;


    /**
     * @ORM\Column(type="boolean")
     */   
    protected $restaurants = 0;


    public function __construct()
    {
    }


    /**
     * toString Title
     *
     * @return string 
     */
    public function __toString()
    {
		if($this->getTitle()){
			return (string)$this->getTitle();			
		}
		else{
			return (string)'New Spot Attribute';
		}
    }
    
    /**
    * toString PublicTransportation
    *
    * @return string 
    */
    public function getPublicTransportationAsString()
    {
        switch($this->getPublicTransportation()){
            case(0): return "No";
            case(1): return "Yes";
        }
    }
    
    /**
    * toString AccessProblem
    *
    * @return string 
    */
    public function getAccessProblemAsString()
    {
        switch($this->getAccessProblem()){
            case(0): return "No";
            case(1): return "Yes";
        }
    }
    
    /**
    * toString SurfClub
    *
    * @return string 
    */
    public function getSurfClubAsString()
    {
        switch($this->getSurfClub()){
            case(0): return "No";
            case(1): return "Yes";
        }
    }
    
    /**
    * toString Lessons
    *
    * @return string 
    */
    public function getLessonsAsString()
    {
        switch($this->getLessons()){
            case(0): return "No";
            case(1): return "Yes";
        }
    }
    
    /**
    * toString Rental
    *
    * @return string 
    */
    public function getRentalAsString()
    {
        switch($this->getRental()){
            case(0): return "No";
            case(1): return "Yes";
        }
    }
    
    /**
    * toString Storage
    *
    * @return string 
    */
    public function getStorageAsString()
    {
        switch($this->getStorage()){
            case(0): return "No";
            case(1): return "Yes";
        }
    }
    
    /**
    * toString Repair
    *
    * @return string 
    */
    public function getRepairAsString()
    {
        switch($this->getRepair()){
            case(0): return "No";
            case(1): return "Yes";
        }
    }
    
    /**
    * toString Gearshop
    *
    * @return string 
    */
    public function getGearshopAsString()
    {
        switch($this->getGearshop()){
            case(0): return "No";
            case(1): return "Yes";
        }
    }
    
    /**
    * toString Rescue
    *
    * @return string 
    */
    public function getRescueAsString()
    {
        switch($this->getRescue()){
            case(0): return "No";
            case(1): return "Yes";
        }
    }
    
    /**
    * toString SnacksAndDrinks
    *
    * @return string 
    */
    public function getSnacksAndDrinksAsString()
    {
        switch($this->getSnacksAndDrinks()){
            case(0): return "No";
            case(1): return "Yes";
        }
    }
    
    /**
    * toString Parking
    *
    * @return string 
    */
    public function getParkingAsString()
    {
        switch($this->getParking()){
            case(0): return "No";
            case(1): return "Yes";
        }
    }
    
    /**
    * toString Toilets
    *
    * @return string 
    */
    public function getToiletsAsString()
    {
        switch($this->getToilets()){
            case(0): return "No";
            case(1): return "Yes";
        }
    }
    
    /**
    * toString Showers
    *
    * @return string 
    */
    public function getShowersAsString()
    {
        switch($this->getShowers()){
            case(0): return "No";
            case(1): return "Yes";
        }
    }
    
    /**
    * toString Nightlife
    *
    * @return string 
    */
    public function getNightlifeAsString()
    {
        switch($this->getNightlife()){
            case(0): return "No";
            case(1): return "Yes";
        }
    }
    
    /**
    * toString Family
    *
    * @return string 
    */
    public function getFamilyAsString()
    {
        switch($this->getFamily()){
            case(0): return "No";
            case(1): return "Yes";
        }
    }
    
    /**
    * toString Restaurants
    *
    * @return string 
    */
    public function getRestaurantsAsString()
    {
        switch($this->getRestaurants()){
            case(0): return "No";
            case(1): return "Yes";
        }
    }
}