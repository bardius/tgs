imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.xml }
    - { resource: tinymce.yml }

framework:
    #esi:             ~
    translator:      ~
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
    form:            true
    csrf_protection: true
    validation:      { enable_annotations: true }
    templating:      { engines: ['twig'] } #assets_version: SomeVersionScheme
    default_locale:  %locale%
    session:         ~

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%
    form:
      resources:
        - 'ContentBlockBundle:Form:fields.html.twig'
        - 'PageBundle:Form:fields.html.twig'
    
parameters:

    
# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    bundles:        [ PageBundle, BlogBundle, DestinationBundle, SpotBundle, FOSUserBundle ]
    java:           %javapath%
    
    filters:
        cssrewrite: ~
        #scssphp:
        #  apply_to: "\.scss$"
        #  import_paths: [ "%kernel.root_dir%/../web/bower_components/foundation/scss" ]
        #  compass: true
        scss:       ~
        yui_css:
            jar:    "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar.jar"
        yui_js:
            jar:    "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:       %database_driver%
        host:         %database_host%
        port:         %database_port%
        dbname:       %database_name%
        user:         %database_user%
        password:     %database_password%
        unix_socket:  %unix_socket%
        charset:      UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: %kernel.debug%
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%
    spool:     { type: memory }



fos_user:
    db_driver:      orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name:  main
    user_class:     Application\Sonata\UserBundle\Entity\User
    group:
        group_class:    Application\Sonata\UserBundle\Entity\Group
    from_email:
        address:        info@thegreekspots.co.uk
        sender_name:    TGS
    service:
        mailer:         fos_user.mailer.twig_swift
    registration:
        form:
            type:       registration
        confirmation:
            enabled:    true
            template:   FOSUserBundle:Registration:confirm_email.txt.twig

sonata_user:
    security_acl: true
    #sonata_user_impersonating:
    #    pattern: /
    #    defaults: { _controller: SonataPageBundle:Page:catchAll }
    impersonating_route: sonata_user_impersonating
    admin:
        user:
            class: Application\Sonata\UserBundle\Admin\Entity\BardisCMSUserAdmin
    

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]

        #sonata.admin_doctrine_orm.block.audit:
        #    contexts:   [admin]

        sonata.block.service.text:
        sonata.block.service.action:
        sonata.block.service.rss:

        # Some specific blocks from the SonataMediaBundle
        sonata.media.block.media:
          
        # Some specific blocks from the BardisCMS Bundles
        sonata.admin.pages:
        sonata.admin.menus: 
        sonata.admin.blogs:
        sonata.admin.destinations:
        sonata.admin.spots:
        sonata.admin.categories:
        sonata.admin.tags:
        sonata.admin.destinationcategories:
        sonata.admin.destinationtags:
        sonata.admin.spotdestinationfilters:
        sonata.admin.spotfilters:
        sonata.admin.contentblocks:
        sonata.user.admin.user:
        sonata.admin.settings:
        sonata.admin.comments:

sonata_cache:
    caches:
        #esi:
        #    servers:
        #        - varnishadm -T 127.0.0.1:2000 {{ COMMAND }} "{{ EXPRESSION }}"

        #memcached:
        #    prefix: test     # prefix to ensure there is no clash between instances
        #    servers:
        #        - {host: 127.0.0.1, port: 11211, weight: 0}

        #memcache:
        #    prefix: test     # prefix to ensure there is no clash between instances
        #    servers:
        #        - {host: 127.0.0.1, port: 11211, weight: 1}

        #apc:
        #    token:  s3cur3   # token used to clear the related cache
        #    prefix: test     # prefix to ensure there is no clash between instances
        #    servers:
        #        - { domain: kooqit.local, ip: 127.0.0.1, port: 80}
        
        
sonata_admin:
    title:      TGS - Website Admin
    title_logo: /images/site_assets/adminlogo.jpg
    security:
        handler: sonata.admin.security.handler.noop
        # acl security information
        information:
            EDIT: EDIT
            LIST: LIST
            CREATE: CREATE
            VIEW: VIEW
            DELETE: DELETE
            OPERATOR: OPERATOR
            MASTER: MASTER
    templates:
        # default global templates
        layout:  SonataAdminBundle::standard_layout.html.twig
        ajax:    SonataAdminBundle::ajax_layout.html.twig

        # default actions templates, should extend a global templates
        list:    SonataAdminBundle:CRUD:list.html.twig
        show:    SonataAdminBundle:CRUD:show.html.twig
        edit:    SonataAdminBundle:CRUD:edit.html.twig
    dashboard:
        blocks:
            # display a dashboard block
            - { position: left, type: sonata.admin.block.admin_list, settings: { groups: [sonata_pages, sonata_categories, sonata_spotfilters, sonata_comments] } }
            
            # display a dashboard block
            - { position: right, type: sonata.admin.block.admin_list, settings: { groups: [sonata_settings, sonata_menus, sonata_users, sonata_contentblocks, sonata_medias] } }
            
            # Customize this part to add new block configuration
            #- { position: right, type: sonata.block.service.text, settings: { content: "<h2>Welcome to the Sonata Admin</h2> <p>This is a <code>sonata.block.service.text</code> from the Block Bundle, you can create and add new block in these area by configuring the <code>sonata_admin</code> section.</p> <br /> For instance, here a RSS feed parser (<code>sonata.block.service.rss</code>):"} }

            #- { position: right, type: sonata.block.service.rss, settings: { title: Sonata Project's Feeds, url: http://sonata-project.org/blog/archive.rss }}

        groups:
           sonata_pages:
              label: Website Pages
              items:
                  - sonata.admin.pages
                  - sonata.admin.blogs
                  - sonata.admin.destination
                  - sonata.admin.spots
           sonata_menus:
              label: Menus
              items:
                  - sonata.admin.menus
           sonata_categories:
              label: Categories & Tags
              items:
                  - sonata.admin.categories
                  - sonata.admin.tags
                  - sonata.admin.destinationcategories
                  - sonata.admin.destinationtags
           sonata_spotfilters:
              label: Spot Filters
              items:
                  - sonata.admin.spotdestinationfilters
                  - sonata.admin.spotfilters
           sonata_contentblocks:
              label: Content Blocks
              items:
                  - sonata.admin.contentblocks
           sonata_comments:
              label: Comments
              items:
                  - sonata.admin.comments
           sonata_settings:
              label: Settings
              items:
                  - sonata.admin.settings
           sonata_users:
              label: Users
              items:
                  - sonata.user.admin.user
                  - sonata.user.admin.group
           sonata_medias:
              label: Media
              items:
                  - sonata.media.admin.media
                  - sonata.media.admin.gallery
                  
# cli  http://sonata-project.org/bundles/media/2-1/doc/reference/command_line.html
sonata_media:
    default_context: default
    db_driver: doctrine_orm # or doctrine_mongodb
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.youtube
                - sonata.media.provider.vimeo
                - sonata.media.provider.image
                - sonata.media.provider.file

            formats:
                adminthumb: { width: 70 , height: 70 , quality: 80 }
                small:			{ width: 188 , height: 263 , quality: 80 }
                medium:			{ width: 394 , height: 263 , quality: 80 }
                big:				{ width: 840 , height: 320 , quality: 80 }
                original:		{ quality: 80 }                
        
        intro:
            providers:
                - sonata.media.provider.youtube
                - sonata.media.provider.image

            formats:
                adminthumb: { width: 70 , height: 70 , quality: 80 }
                small:			{ width: 188 , height: 263 , quality: 80 }
                blog:				{ width: 227 , height: 205 , quality: 80 }
                medium:			{ width: 394 , height: 263 , quality: 80 }
                big:				{ width: 601 , height: 263 , quality: 80 }
                original:		{ quality: 80 }  
        
        bgimage:
            providers:
                - sonata.media.provider.image

            formats:
                adminthumb: { width: 70 , height: 70 , quality: 80 }
                small:      { width: 224 , height: 206 , quality: 80 }
                mobile:     { width: 768 , height: 300 , quality: 80 }
                medium:     { width: 310 , height: 318 , quality: 80 }
                big:        { width: 1388 , height: 257 , quality: 80 }
                slide:      { width: 1388 , height: 394 , quality: 80 }
                original:   { quality: 80 }        
        
        destination:
            providers:
                - sonata.media.provider.image

            formats:
                adminthumb: { width: 70 , height: 70 , quality: 80 }
                xsmall:     { width: 191 , height: 176 , quality: 80 }
                small:      { width: 224 , height: 206 , quality: 80 }
                medium:     { width: 310 , height: 318 , quality: 80 }
                big:        { width: 307 , height: 356 , quality: 80 }
                original:   { quality: 80 }  
                
        spot:
            providers:
                - sonata.media.provider.image

            formats:
                adminthumb: { width: 70 , height: 70 , quality: 80 }
                xsmall:     { width: 66 , height: 112 , quality: 80 }
                small:      { width: 152 , height: 260, quality: 80 }
                medium:     { width: 226 , height: 385, quality: 80 }
                big:        { width: 306 , height: 522 , quality: 80 }
                original:   { quality: 80 }
                
        spotlist:
            providers:
                - sonata.media.provider.image

            formats:
                adminthumb: { width: 70 , height: 70 , quality: 80 }
                small:      { width: 226 , height: 260 , quality: 80 }
                medium:     { width: 226 , height: 260 , quality: 80 }
                big:        { width: 226 , height: 260 , quality: 80 }
                original:   { quality: 80 }              
        
        icons:
            providers:
                - sonata.media.provider.image

            formats:
                adminthumb: { width: 46 , height: 46 , quality: 80 }
                small:			{ width: 46 , height: 46 , quality: 80}
                medium:			{ width: 66 , height: 66 , quality: 80}
                big:				{ width: 86 , height: 86 , quality: 80}
                original:		{ quality: 80 } 

    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     false
    
    providers:
        file:
            resizer:    false
            filesystem: sonata.media.filesystem.local
            cdn:        sonata.media.cdn.server
            generator:  sonata.media.generator.default
            thumbnail:  sonata.media.thumbnail.format

        image:          
            service:    sonata.media.provider.image
            resizer:    sonata.media.resizer.bardiscms # sonata.media.resizer.square # sonata.media.resizer.simple
            filesystem: sonata.media.filesystem.local
            cdn:        sonata.media.cdn.server
            generator:  sonata.media.generator.default
            thumbnail:  sonata.media.thumbnail.format
            allowed_extensions: ['jpg', 'png', 'jpeg']
            allowed_mime_types: ['image/pjpeg', 'image/jpeg', 'image/png', 'image/x-png']

        youtube:           
            service:    sonata.media.provider.youtube
            resizer:    sonata.media.resizer.bardiscms # sonata.media.resizer.square # sonata.media.resizer.simple
            filesystem: sonata.media.filesystem.local
            cdn:        sonata.media.cdn.server
            generator:  sonata.media.generator.default
            thumbnail:  sonata.media.thumbnail.format
            html5:			true

        vimeo:
            service:    sonata.media.provider.vimeo
            resizer:    sonata.media.resizer.bardiscms # sonata.media.resizer.square # sonata.media.resizer.simple
            filesystem: sonata.media.filesystem.local
            cdn:        sonata.media.cdn.server
            generator:  sonata.media.generator.default
            thumbnail:  sonata.media.thumbnail.format
        
page:        
    loadservices: true
    
    pagetypes:
        one_columned:       One Column Page
        two_columned:       Two Column Page
        three_columned:     Three Column Page
        contact:            Contact Form Page
        category_page:      Category Page
        page_tag_list:			Filtered Results
        homepage:           Homepage
        sitemap:            Sitemap
    
    mediasizes:
        original:   Original
        small:      Small
        medium:     Medium
        big:        Big

content_block:        
    loadservices: true
    
    mediasizes:
        original:   Original
        small:      Small
        medium:     Medium
        big:        Big
        
    contenttypes:
        html:       Text/HTML
        image:      Image
        file:       File Attachment
        youtube:    YouTube Video
        slide:      Slide
        contact:    Contact Form
    
    contentsizes:
        large-12:     100%
        large-3:      25%
        large-4:      33%
        large-6:      50%
        large-8:      66%
        large-9:      75%
       
tag:        
    loadservices: true
    
    tagcategories:
        generic:       Generic Tags
        special:       Special Tags
       
category:        
    loadservices: false

menu:      
    actions:
        none:       None
        showPage:   Show Page
    
    menutypes:
        Page:					Page
        Blog:					Blog Page
        Spot:					Spot Page
        Destination:  Destination Page
        http:					External URL
        url:					Internal URL
        seperator:		Seperator
        
    menugroups:
        Main Menu:          Main Menu
        Small Footer Menu:  Small Footer Menu
        Footer Menu:        Footer Menu
    
    accessLevel:
        0:      Public
        1:      Authendicated
        2:      Administrator
    
    publishState:
        0:      Unpublished
        1:      Published
        
destination:        
    loadservices: true
    
    pagetypes:
        destination_article:         Destination Article
        destination_cat_page:        Destination Category Page
        destination_home:            Destination Homepage
    
    stylecolors:
        default:	Default
        green:		Green
        red:			Red
        pink:			Pink
        purple:		Purple
    
    tagcategories:
        sports:		Sports

blog:        
    loadservices: true
    
    comments: true
    
    pagetypes:
        blog_article:         Blog Article
        blog_cat_page:        Blog Category Page
        blog_filtered_list:   Blog Filter Results
        blog_home:            Blog Homepage
    
    mediasizes:
        original:   Original
        small:      Small
        medium:     Medium
        big:        Big
        
        
spot:        
    loadservices: true
    
    pagetypes:
        spot_article:        Spot Page
        spot_home:           Spot Home
    
    filtercategories:
        amenities:      Amenities
        budget:					Budget
        experience:     Experience
        lifestyle:			Lifestyle
        season:         Season
        sea_state:      Sea State
        sport:					Sport
        style:          Style
        swell_length:   Swell Length
        wind_force:     Wind Force
        
comment:    
    loadservices: true
    
    commenttypes:
        Blog:       Blog Comments
        
#skeleton:        
#    loadservices: true
#    
#    pagetypes:
#        skeleton_article:         Skeleton Article
#        skeleton_filtered_list:   Skeleton Tag Results
#        skeleton_home:            Skeleton Homepage
#        category_page:            Skeleton Category Page
#   
#    mediasizes:
#        original:   Original
#        small:      Small
#        medium:     Medium
#        big:        Big