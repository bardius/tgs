<?php

namespace Proxies\__CG__\Maynard\PageBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Page extends \Maynard\PageBundle\Entity\Page implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'date', 'title', 'author', 'alias', 'pageOrder', 'showPageTitle', 'publishState', 'pageclass', 'description', 'keywords', 'introtext', 'introimage', 'bgimage', 'intromediasize', 'introclass', 'categories', 'tags', 'pagetype', 'maincontentblocks', 'bannercontentblocks', 'secondarycontentblocks', 'extracontentblocks', 'modalcontentblocks');
        }

        return array('__isInitialized__', 'id', 'date', 'title', 'author', 'alias', 'pageOrder', 'showPageTitle', 'publishState', 'pageclass', 'description', 'keywords', 'introtext', 'introimage', 'bgimage', 'intromediasize', 'introclass', 'categories', 'tags', 'pagetype', 'maincontentblocks', 'bannercontentblocks', 'secondarycontentblocks', 'extracontentblocks', 'modalcontentblocks');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Page $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', array($date));

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', array());

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setAuthor($author)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuthor', array($author));

        return parent::setAuthor($author);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthor', array());

        return parent::getAuthor();
    }

    /**
     * {@inheritDoc}
     */
    public function setPageclass($pageclass)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPageclass', array($pageclass));

        return parent::setPageclass($pageclass);
    }

    /**
     * {@inheritDoc}
     */
    public function getPageclass()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageclass', array());

        return parent::getPageclass();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setKeywords($keywords)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setKeywords', array($keywords));

        return parent::setKeywords($keywords);
    }

    /**
     * {@inheritDoc}
     */
    public function getKeywords()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getKeywords', array());

        return parent::getKeywords();
    }

    /**
     * {@inheritDoc}
     */
    public function setIntrotext($introtext)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIntrotext', array($introtext));

        return parent::setIntrotext($introtext);
    }

    /**
     * {@inheritDoc}
     */
    public function getIntrotext()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIntrotext', array());

        return parent::getIntrotext();
    }

    /**
     * {@inheritDoc}
     */
    public function setIntroimage(\Application\Sonata\MediaBundle\Entity\Media $introimage = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIntroimage', array($introimage));

        return parent::setIntroimage($introimage);
    }

    /**
     * {@inheritDoc}
     */
    public function getIntroimage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIntroimage', array());

        return parent::getIntroimage();
    }

    /**
     * {@inheritDoc}
     */
    public function addIntroimage(\Application\Sonata\MediaBundle\Entity\Media $introimage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addIntroimage', array($introimage));

        return parent::addIntroimage($introimage);
    }

    /**
     * {@inheritDoc}
     */
    public function removeIntroimage(\Application\Sonata\MediaBundle\Entity\Media $introimage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeIntroimage', array($introimage));

        return parent::removeIntroimage($introimage);
    }

    /**
     * {@inheritDoc}
     */
    public function setBgimage(\Application\Sonata\MediaBundle\Entity\Media $bgimage = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBgimage', array($bgimage));

        return parent::setBgimage($bgimage);
    }

    /**
     * {@inheritDoc}
     */
    public function getBgimage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBgimage', array());

        return parent::getBgimage();
    }

    /**
     * {@inheritDoc}
     */
    public function setIntroclass($introclass)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIntroclass', array($introclass));

        return parent::setIntroclass($introclass);
    }

    /**
     * {@inheritDoc}
     */
    public function getIntroclass()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIntroclass', array());

        return parent::getIntroclass();
    }

    /**
     * {@inheritDoc}
     */
    public function setPagetype($pagetype)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPagetype', array($pagetype));

        return parent::setPagetype($pagetype);
    }

    /**
     * {@inheritDoc}
     */
    public function getPagetype()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPagetype', array());

        return parent::getPagetype();
    }

    /**
     * {@inheritDoc}
     */
    public function addMaincontentblock(\Maynard\PageBundle\Entity\ContentBlock $maincontentblocks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMaincontentblock', array($maincontentblocks));

        return parent::addMaincontentblock($maincontentblocks);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMaincontentblock(\Maynard\PageBundle\Entity\ContentBlock $maincontentblocks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMaincontentblock', array($maincontentblocks));

        return parent::removeMaincontentblock($maincontentblocks);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaincontentblocks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaincontentblocks', array());

        return parent::getMaincontentblocks();
    }

    /**
     * {@inheritDoc}
     */
    public function addSecondarycontentblock(\Maynard\PageBundle\Entity\ContentBlock $secondarycontentblocks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSecondarycontentblock', array($secondarycontentblocks));

        return parent::addSecondarycontentblock($secondarycontentblocks);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSecondarycontentblock(\Maynard\PageBundle\Entity\ContentBlock $secondarycontentblocks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSecondarycontentblock', array($secondarycontentblocks));

        return parent::removeSecondarycontentblock($secondarycontentblocks);
    }

    /**
     * {@inheritDoc}
     */
    public function getSecondarycontentblocks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSecondarycontentblocks', array());

        return parent::getSecondarycontentblocks();
    }

    /**
     * {@inheritDoc}
     */
    public function addExtracontentblock(\Maynard\PageBundle\Entity\ContentBlock $extracontentblocks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addExtracontentblock', array($extracontentblocks));

        return parent::addExtracontentblock($extracontentblocks);
    }

    /**
     * {@inheritDoc}
     */
    public function removeExtracontentblock(\Maynard\PageBundle\Entity\ContentBlock $extracontentblocks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeExtracontentblock', array($extracontentblocks));

        return parent::removeExtracontentblock($extracontentblocks);
    }

    /**
     * {@inheritDoc}
     */
    public function getExtracontentblocks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExtracontentblocks', array());

        return parent::getExtracontentblocks();
    }

    /**
     * {@inheritDoc}
     */
    public function addModalcontentblock(\Maynard\PageBundle\Entity\ContentBlock $modalcontentblocks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addModalcontentblock', array($modalcontentblocks));

        return parent::addModalcontentblock($modalcontentblocks);
    }

    /**
     * {@inheritDoc}
     */
    public function removeModalcontentblock(\Maynard\PageBundle\Entity\ContentBlock $modalcontentblocks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeModalcontentblock', array($modalcontentblocks));

        return parent::removeModalcontentblock($modalcontentblocks);
    }

    /**
     * {@inheritDoc}
     */
    public function getModalcontentblocks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModalcontentblocks', array());

        return parent::getModalcontentblocks();
    }

    /**
     * {@inheritDoc}
     */
    public function addCategory(\Maynard\PageBundle\Entity\Category $categories)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCategory', array($categories));

        return parent::addCategory($categories);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCategory(\Maynard\PageBundle\Entity\Category $categories)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCategory', array($categories));

        return parent::removeCategory($categories);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategories()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategories', array());

        return parent::getCategories();
    }

    /**
     * {@inheritDoc}
     */
    public function addTag(\Maynard\PageBundle\Entity\Tag $tags)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTag', array($tags));

        return parent::addTag($tags);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTag(\Maynard\PageBundle\Entity\Tag $tags)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTag', array($tags));

        return parent::removeTag($tags);
    }

    /**
     * {@inheritDoc}
     */
    public function getTags()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTags', array());

        return parent::getTags();
    }

    /**
     * {@inheritDoc}
     */
    public function addCategories(\Maynard\PageBundle\Entity\Category $categories)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCategories', array($categories));

        return parent::addCategories($categories);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCategories(\Maynard\PageBundle\Entity\Category $categories)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCategories', array($categories));

        return parent::removeCategories($categories);
    }

    /**
     * {@inheritDoc}
     */
    public function setIntromediasize($intromediasize)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIntromediasize', array($intromediasize));

        return parent::setIntromediasize($intromediasize);
    }

    /**
     * {@inheritDoc}
     */
    public function getIntromediasize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIntromediasize', array());

        return parent::getIntromediasize();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function setAlias($alias)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAlias', array($alias));

        return parent::setAlias($alias);
    }

    /**
     * {@inheritDoc}
     */
    public function getAlias()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAlias', array());

        return parent::getAlias();
    }

    /**
     * {@inheritDoc}
     */
    public function setShowPageTitle($showPageTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShowPageTitle', array($showPageTitle));

        return parent::setShowPageTitle($showPageTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getShowPageTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShowPageTitle', array());

        return parent::getShowPageTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function addBannercontentblock(\Maynard\PageBundle\Entity\ContentBlock $bannercontentblocks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBannercontentblock', array($bannercontentblocks));

        return parent::addBannercontentblock($bannercontentblocks);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBannercontentblock(\Maynard\PageBundle\Entity\ContentBlock $bannercontentblocks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBannercontentblock', array($bannercontentblocks));

        return parent::removeBannercontentblock($bannercontentblocks);
    }

    /**
     * {@inheritDoc}
     */
    public function getBannercontentblocks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBannercontentblocks', array());

        return parent::getBannercontentblocks();
    }

    /**
     * {@inheritDoc}
     */
    public function setPageOrder($pageOrder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPageOrder', array($pageOrder));

        return parent::setPageOrder($pageOrder);
    }

    /**
     * {@inheritDoc}
     */
    public function getPageOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageOrder', array());

        return parent::getPageOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublishState($publishState)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublishState', array($publishState));

        return parent::setPublishState($publishState);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublishState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublishState', array());

        return parent::getPublishState();
    }

    /**
     * {@inheritDoc}
     */
    public function getPublishStateAsString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublishStateAsString', array());

        return parent::getPublishStateAsString();
    }

    /**
     * {@inheritDoc}
     */
    public function getPagetypeAsString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPagetypeAsString', array());

        return parent::getPagetypeAsString();
    }

}
